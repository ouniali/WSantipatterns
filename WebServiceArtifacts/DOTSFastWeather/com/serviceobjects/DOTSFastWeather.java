
package com.serviceobjects;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * For more information on our web services, visit us at <a href='http://www.serviceobjects.com/products/default.asp' target='new'>our website</a><br/><br/><a href='http://www.serviceobjects.com' target='new'><img src='http://www.serviceobjects.com/images/so_logo_2_inside.gif' border='0'/></a>
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "DOTSFastWeather", targetNamespace = "http://www.serviceobjects.com/", wsdlLocation = "META-INF/wsdl/service38.Accounts.wsdl")
public class DOTSFastWeather
    extends Service
{

    private final static URL DOTSFASTWEATHER_WSDL_LOCATION;
    private final static WebServiceException DOTSFASTWEATHER_EXCEPTION;
    private final static QName DOTSFASTWEATHER_QNAME = new QName("http://www.serviceobjects.com/", "DOTSFastWeather");

    static {
        DOTSFASTWEATHER_WSDL_LOCATION = com.serviceobjects.DOTSFastWeather.class.getClassLoader().getResource("META-INF/wsdl/service38.Accounts.wsdl");
        WebServiceException e = null;
        if (DOTSFASTWEATHER_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/service38.Accounts.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        DOTSFASTWEATHER_EXCEPTION = e;
    }

    public DOTSFastWeather() {
        super(__getWsdlLocation(), DOTSFASTWEATHER_QNAME);
    }

    public DOTSFastWeather(WebServiceFeature... features) {
        super(__getWsdlLocation(), DOTSFASTWEATHER_QNAME, features);
    }

    public DOTSFastWeather(URL wsdlLocation) {
        super(wsdlLocation, DOTSFASTWEATHER_QNAME);
    }

    public DOTSFastWeather(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DOTSFASTWEATHER_QNAME, features);
    }

    public DOTSFastWeather(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DOTSFastWeather(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DOTSFastWeatherSoap
     */
    @WebEndpoint(name = "DOTSFastWeatherSoap")
    public DOTSFastWeatherSoap getDOTSFastWeatherSoap() {
        return super.getPort(new QName("http://www.serviceobjects.com/", "DOTSFastWeatherSoap"), DOTSFastWeatherSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DOTSFastWeatherSoap
     */
    @WebEndpoint(name = "DOTSFastWeatherSoap")
    public DOTSFastWeatherSoap getDOTSFastWeatherSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.serviceobjects.com/", "DOTSFastWeatherSoap"), DOTSFastWeatherSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DOTSFASTWEATHER_EXCEPTION!= null) {
            throw DOTSFASTWEATHER_EXCEPTION;
        }
        return DOTSFASTWEATHER_WSDL_LOCATION;
    }

}
