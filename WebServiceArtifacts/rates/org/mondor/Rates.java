
package org.mondor;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "rates", targetNamespace = "http://mondor.org/", wsdlLocation = "META-INF/wsdl/16730_United_States_rates.wsdl")
public class Rates
    extends Service
{

    private final static URL RATES_WSDL_LOCATION;
    private final static WebServiceException RATES_EXCEPTION;
    private final static QName RATES_QNAME = new QName("http://mondor.org/", "rates");

    static {
        RATES_WSDL_LOCATION = org.mondor.Rates.class.getClassLoader().getResource("META-INF/wsdl/16730_United_States_rates.wsdl");
        WebServiceException e = null;
        if (RATES_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/16730_United_States_rates.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        RATES_EXCEPTION = e;
    }

    public Rates() {
        super(__getWsdlLocation(), RATES_QNAME);
    }

    public Rates(WebServiceFeature... features) {
        super(__getWsdlLocation(), RATES_QNAME, features);
    }

    public Rates(URL wsdlLocation) {
        super(wsdlLocation, RATES_QNAME);
    }

    public Rates(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, RATES_QNAME, features);
    }

    public Rates(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Rates(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RatesSoap
     */
    @WebEndpoint(name = "ratesSoap")
    public RatesSoap getRatesSoap() {
        return super.getPort(new QName("http://mondor.org/", "ratesSoap"), RatesSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RatesSoap
     */
    @WebEndpoint(name = "ratesSoap")
    public RatesSoap getRatesSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://mondor.org/", "ratesSoap"), RatesSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (RATES_EXCEPTION!= null) {
            throw RATES_EXCEPTION;
        }
        return RATES_WSDL_LOCATION;
    }

}
