
package webservices;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * 
 * Overview: Land Investment Model
 * 
 * One of several decision-analysis techniques supported by Vanguard, decision trees are used to understand problems and the risks or uncertainties involved in applying solutions.  The decision tree technique offers two key benefits:
 * 
 *   1) The ability to make decisions which are more likely to yield favorable results, and
 *   2) The ability to clearly communicate to others the reasons behind your decisions.
 * 
 * This model implements a solution to the following problem:
 * 
 * You have the opportunity to purchase a piece of property for $200,000.  If it can be rezoned for business use, you will be able to immediately resell the property for about $250,000.  You estimate that there is a 60% chance that your rezone request will be successful.  If it fails you can dump the property for $170,000 or you can choose to appeal the zoning board's decision, which has only about a 10% chance of success.  Applying for the zoning change and appealing an unfavorable ruling will each cost about $5,000.  Should you purchase the property?
 * 
 * Decision trees are constructed using two types of nodes:  decision and event.  Decision nodes are those where one can select the best of several outcomes.  These are constructed using the max primitive.  Event nodes are those where the outcome of a previous decision is uncertain.  These are constructed using the emv (Expected Monetary Value) primitive.
 * 
 * Max and emv primitives are different from other primitives in that they cause special notations to be added to the tree display.   Max causes the node to be identified as a decision node by placing a square after the node.  The emv primitive causes the current node to be identified as an uncertain event by placing a circle after the node.  Individual event probabilities are displayed on the trailing event branches.
 * 
 * Select" Decision Tree" in the "Tools" menu to access decision tree evaluation tools.
 * 
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Land%20Investment%20Decision", targetNamespace = "http://webservices", wsdlLocation = "META-INF/wsdl/10319_United_States_Land_Investment_Decision.wsdl")
public class Land_002520Investment_002520Decision
    extends Service
{

    private final static URL LAND_002520INVESTMENT_002520DECISION_WSDL_LOCATION;
    private final static WebServiceException LAND_002520INVESTMENT_002520DECISION_EXCEPTION;
    private final static QName LAND_002520INVESTMENT_002520DECISION_QNAME = new QName("http://webservices", "Land%20Investment%20Decision");

    static {
        LAND_002520INVESTMENT_002520DECISION_WSDL_LOCATION = webservices.Land_002520Investment_002520Decision.class.getClassLoader().getResource("META-INF/wsdl/10319_United_States_Land_Investment_Decision.wsdl");
        WebServiceException e = null;
        if (LAND_002520INVESTMENT_002520DECISION_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/10319_United_States_Land_Investment_Decision.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        LAND_002520INVESTMENT_002520DECISION_EXCEPTION = e;
    }

    public Land_002520Investment_002520Decision() {
        super(__getWsdlLocation(), LAND_002520INVESTMENT_002520DECISION_QNAME);
    }

    public Land_002520Investment_002520Decision(WebServiceFeature... features) {
        super(__getWsdlLocation(), LAND_002520INVESTMENT_002520DECISION_QNAME, features);
    }

    public Land_002520Investment_002520Decision(URL wsdlLocation) {
        super(wsdlLocation, LAND_002520INVESTMENT_002520DECISION_QNAME);
    }

    public Land_002520Investment_002520Decision(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, LAND_002520INVESTMENT_002520DECISION_QNAME, features);
    }

    public Land_002520Investment_002520Decision(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Land_002520Investment_002520Decision(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "ServicePort")
    public ServicePortType getServicePort() {
        return super.getPort(new QName("http://webservices", "ServicePort"), ServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "ServicePort")
    public ServicePortType getServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservices", "ServicePort"), ServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (LAND_002520INVESTMENT_002520DECISION_EXCEPTION!= null) {
            throw LAND_002520INVESTMENT_002520DECISION_EXCEPTION;
        }
        return LAND_002520INVESTMENT_002520DECISION_WSDL_LOCATION;
    }

}
