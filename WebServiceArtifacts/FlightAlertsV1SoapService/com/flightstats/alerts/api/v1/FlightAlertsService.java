
package com.flightstats.alerts.api.v1;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "flightAlertsService", targetNamespace = "http://v1.api.alerts.flightstats.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightAlertsService {


    /**
     * 
     * @param extendedOptions
     * @param appId
     * @param appKey
     * @param ruleId
     * @return
     *     returns com.flightstats.alerts.api.v1.ResponseRuleById
     * @throws APIException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getById", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.GetById")
    @ResponseWrapper(localName = "getByIdResponse", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.GetByIdResponse")
    @Action(input = "http://v1.api.alerts.flightstats.com/flightAlertsService/getByIdRequest", output = "http://v1.api.alerts.flightstats.com/flightAlertsService/getByIdResponse", fault = {
        @FaultAction(className = APIException_Exception.class, value = "http://v1.api.alerts.flightstats.com/flightAlertsService/getById/Fault/APIException")
    })
    public ResponseRuleById getById(
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "appKey", targetNamespace = "")
        String appKey,
        @WebParam(name = "ruleId", targetNamespace = "")
        String ruleId,
        @WebParam(name = "extendedOptions", targetNamespace = "")
        String extendedOptions)
        throws APIException_Exception
    ;

    /**
     * 
     * @param extendedOptions
     * @param appId
     * @param appKey
     * @return
     *     returns com.flightstats.alerts.api.v1.ResponseRuleIds
     * @throws APIException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listRuleIDs", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ListRuleIDs")
    @ResponseWrapper(localName = "listRuleIDsResponse", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ListRuleIDsResponse")
    @Action(input = "http://v1.api.alerts.flightstats.com/flightAlertsService/listRuleIDsRequest", output = "http://v1.api.alerts.flightstats.com/flightAlertsService/listRuleIDsResponse", fault = {
        @FaultAction(className = APIException_Exception.class, value = "http://v1.api.alerts.flightstats.com/flightAlertsService/listRuleIDs/Fault/APIException")
    })
    public ResponseRuleIds listRuleIDs(
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "appKey", targetNamespace = "")
        String appKey,
        @WebParam(name = "extendedOptions", targetNamespace = "")
        String extendedOptions)
        throws APIException_Exception
    ;

    /**
     * 
     * @param extendedOptions
     * @param appId
     * @param lessThan
     * @param appKey
     * @return
     *     returns com.flightstats.alerts.api.v1.ResponseRuleIds
     * @throws APIException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listRuleIDsLessThan", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ListRuleIDsLessThan")
    @ResponseWrapper(localName = "listRuleIDsLessThanResponse", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ListRuleIDsLessThanResponse")
    @Action(input = "http://v1.api.alerts.flightstats.com/flightAlertsService/listRuleIDsLessThanRequest", output = "http://v1.api.alerts.flightstats.com/flightAlertsService/listRuleIDsLessThanResponse", fault = {
        @FaultAction(className = APIException_Exception.class, value = "http://v1.api.alerts.flightstats.com/flightAlertsService/listRuleIDsLessThan/Fault/APIException")
    })
    public ResponseRuleIds listRuleIDsLessThan(
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "appKey", targetNamespace = "")
        String appKey,
        @WebParam(name = "lessThan", targetNamespace = "")
        String lessThan,
        @WebParam(name = "extendedOptions", targetNamespace = "")
        String extendedOptions)
        throws APIException_Exception
    ;

    /**
     * 
     * @param nameValue
     * @param extendedOptions
     * @param departureAirport
     * @param codeType
     * @param year
     * @param type
     * @param deliverTo
     * @param flightNumber
     * @param carrier
     * @param month
     * @param appId
     * @param name
     * @param appKey
     * @param arrivalAirport
     * @param day
     * @param events
     * @param desc
     * @return
     *     returns com.flightstats.alerts.api.v1.ResponseRoute
     * @throws APIException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "byRouteArrival", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ByRouteArrival")
    @ResponseWrapper(localName = "byRouteArrivalResponse", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ByRouteArrivalResponse")
    @Action(input = "http://v1.api.alerts.flightstats.com/flightAlertsService/byRouteArrivalRequest", output = "http://v1.api.alerts.flightstats.com/flightAlertsService/byRouteArrivalResponse", fault = {
        @FaultAction(className = APIException_Exception.class, value = "http://v1.api.alerts.flightstats.com/flightAlertsService/byRouteArrival/Fault/APIException")
    })
    public ResponseRoute byRouteArrival(
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "appKey", targetNamespace = "")
        String appKey,
        @WebParam(name = "carrier", targetNamespace = "")
        String carrier,
        @WebParam(name = "flightNumber", targetNamespace = "")
        String flightNumber,
        @WebParam(name = "departureAirport", targetNamespace = "")
        String departureAirport,
        @WebParam(name = "arrivalAirport", targetNamespace = "")
        String arrivalAirport,
        @WebParam(name = "year", targetNamespace = "")
        int year,
        @WebParam(name = "month", targetNamespace = "")
        int month,
        @WebParam(name = "day", targetNamespace = "")
        int day,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "desc", targetNamespace = "")
        String desc,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "deliverTo", targetNamespace = "")
        String deliverTo,
        @WebParam(name = "events", targetNamespace = "")
        String events,
        @WebParam(name = "nameValue", targetNamespace = "")
        List<NameValueV1> nameValue,
        @WebParam(name = "codeType", targetNamespace = "")
        String codeType,
        @WebParam(name = "extendedOptions", targetNamespace = "")
        String extendedOptions)
        throws APIException_Exception
    ;

    /**
     * 
     * @param nameValue
     * @param extendedOptions
     * @param departureAirport
     * @param codeType
     * @param year
     * @param type
     * @param deliverTo
     * @param flightNumber
     * @param carrier
     * @param month
     * @param appId
     * @param name
     * @param appKey
     * @param arrivalAirport
     * @param day
     * @param events
     * @param desc
     * @return
     *     returns com.flightstats.alerts.api.v1.ResponseRoute
     * @throws APIException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "byRouteDeparture", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ByRouteDeparture")
    @ResponseWrapper(localName = "byRouteDepartureResponse", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ByRouteDepartureResponse")
    @Action(input = "http://v1.api.alerts.flightstats.com/flightAlertsService/byRouteDepartureRequest", output = "http://v1.api.alerts.flightstats.com/flightAlertsService/byRouteDepartureResponse", fault = {
        @FaultAction(className = APIException_Exception.class, value = "http://v1.api.alerts.flightstats.com/flightAlertsService/byRouteDeparture/Fault/APIException")
    })
    public ResponseRoute byRouteDeparture(
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "appKey", targetNamespace = "")
        String appKey,
        @WebParam(name = "carrier", targetNamespace = "")
        String carrier,
        @WebParam(name = "flightNumber", targetNamespace = "")
        String flightNumber,
        @WebParam(name = "departureAirport", targetNamespace = "")
        String departureAirport,
        @WebParam(name = "arrivalAirport", targetNamespace = "")
        String arrivalAirport,
        @WebParam(name = "year", targetNamespace = "")
        int year,
        @WebParam(name = "month", targetNamespace = "")
        int month,
        @WebParam(name = "day", targetNamespace = "")
        int day,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "desc", targetNamespace = "")
        String desc,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "deliverTo", targetNamespace = "")
        String deliverTo,
        @WebParam(name = "events", targetNamespace = "")
        String events,
        @WebParam(name = "nameValue", targetNamespace = "")
        List<NameValueV1> nameValue,
        @WebParam(name = "codeType", targetNamespace = "")
        String codeType,
        @WebParam(name = "extendedOptions", targetNamespace = "")
        String extendedOptions)
        throws APIException_Exception
    ;

    /**
     * 
     * @param nameValue
     * @param extendedOptions
     * @param codeType
     * @param year
     * @param type
     * @param deliverTo
     * @param flightNumber
     * @param carrier
     * @param month
     * @param appId
     * @param name
     * @param appKey
     * @param arrivalAirport
     * @param day
     * @param events
     * @param desc
     * @return
     *     returns com.flightstats.alerts.api.v1.ResponseFlight
     * @throws APIException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "byArrivingFlight", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ByArrivingFlight")
    @ResponseWrapper(localName = "byArrivingFlightResponse", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ByArrivingFlightResponse")
    @Action(input = "http://v1.api.alerts.flightstats.com/flightAlertsService/byArrivingFlightRequest", output = "http://v1.api.alerts.flightstats.com/flightAlertsService/byArrivingFlightResponse", fault = {
        @FaultAction(className = APIException_Exception.class, value = "http://v1.api.alerts.flightstats.com/flightAlertsService/byArrivingFlight/Fault/APIException")
    })
    public ResponseFlight byArrivingFlight(
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "appKey", targetNamespace = "")
        String appKey,
        @WebParam(name = "carrier", targetNamespace = "")
        String carrier,
        @WebParam(name = "flightNumber", targetNamespace = "")
        String flightNumber,
        @WebParam(name = "arrivalAirport", targetNamespace = "")
        String arrivalAirport,
        @WebParam(name = "year", targetNamespace = "")
        int year,
        @WebParam(name = "month", targetNamespace = "")
        int month,
        @WebParam(name = "day", targetNamespace = "")
        int day,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "desc", targetNamespace = "")
        String desc,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "deliverTo", targetNamespace = "")
        String deliverTo,
        @WebParam(name = "events", targetNamespace = "")
        String events,
        @WebParam(name = "nameValue", targetNamespace = "")
        List<NameValueV1> nameValue,
        @WebParam(name = "codeType", targetNamespace = "")
        String codeType,
        @WebParam(name = "extendedOptions", targetNamespace = "")
        String extendedOptions)
        throws APIException_Exception
    ;

    /**
     * 
     * @param nameValue
     * @param extendedOptions
     * @param departureAirport
     * @param codeType
     * @param year
     * @param type
     * @param deliverTo
     * @param flightNumber
     * @param carrier
     * @param month
     * @param appId
     * @param name
     * @param appKey
     * @param day
     * @param events
     * @param desc
     * @return
     *     returns com.flightstats.alerts.api.v1.ResponseFlight
     * @throws APIException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "byDepartingFlight", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ByDepartingFlight")
    @ResponseWrapper(localName = "byDepartingFlightResponse", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.ByDepartingFlightResponse")
    @Action(input = "http://v1.api.alerts.flightstats.com/flightAlertsService/byDepartingFlightRequest", output = "http://v1.api.alerts.flightstats.com/flightAlertsService/byDepartingFlightResponse", fault = {
        @FaultAction(className = APIException_Exception.class, value = "http://v1.api.alerts.flightstats.com/flightAlertsService/byDepartingFlight/Fault/APIException")
    })
    public ResponseFlight byDepartingFlight(
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "appKey", targetNamespace = "")
        String appKey,
        @WebParam(name = "carrier", targetNamespace = "")
        String carrier,
        @WebParam(name = "flightNumber", targetNamespace = "")
        String flightNumber,
        @WebParam(name = "departureAirport", targetNamespace = "")
        String departureAirport,
        @WebParam(name = "year", targetNamespace = "")
        int year,
        @WebParam(name = "month", targetNamespace = "")
        int month,
        @WebParam(name = "day", targetNamespace = "")
        int day,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "desc", targetNamespace = "")
        String desc,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "deliverTo", targetNamespace = "")
        String deliverTo,
        @WebParam(name = "events", targetNamespace = "")
        String events,
        @WebParam(name = "nameValue", targetNamespace = "")
        List<NameValueV1> nameValue,
        @WebParam(name = "codeType", targetNamespace = "")
        String codeType,
        @WebParam(name = "extendedOptions", targetNamespace = "")
        String extendedOptions)
        throws APIException_Exception
    ;

    /**
     * 
     * @param extendedOptions
     * @param appId
     * @param appKey
     * @param ruleId
     * @return
     *     returns com.flightstats.alerts.api.v1.ResponseRuleById
     * @throws APIException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteById", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.DeleteById")
    @ResponseWrapper(localName = "deleteByIdResponse", targetNamespace = "http://v1.api.alerts.flightstats.com/", className = "com.flightstats.alerts.api.v1.DeleteByIdResponse")
    @Action(input = "http://v1.api.alerts.flightstats.com/flightAlertsService/deleteByIdRequest", output = "http://v1.api.alerts.flightstats.com/flightAlertsService/deleteByIdResponse", fault = {
        @FaultAction(className = APIException_Exception.class, value = "http://v1.api.alerts.flightstats.com/flightAlertsService/deleteById/Fault/APIException")
    })
    public ResponseRuleById deleteById(
        @WebParam(name = "appId", targetNamespace = "")
        String appId,
        @WebParam(name = "appKey", targetNamespace = "")
        String appKey,
        @WebParam(name = "ruleId", targetNamespace = "")
        String ruleId,
        @WebParam(name = "extendedOptions", targetNamespace = "")
        String extendedOptions)
        throws APIException_Exception
    ;

}
