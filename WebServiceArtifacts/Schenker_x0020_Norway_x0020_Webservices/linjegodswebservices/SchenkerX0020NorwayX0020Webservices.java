
package linjegodswebservices;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * You must have a valid <b>user</b> and <b>password</b> to use these services.<br>
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Schenker_x0020_Norway_x0020_Webservices", targetNamespace = "LinjegodsWebServices", wsdlLocation = "META-INF/wsdl/17578_Norway_PublicMethodes.wsdl")
public class SchenkerX0020NorwayX0020Webservices
    extends Service
{

    private final static URL SCHENKERX0020NORWAYX0020WEBSERVICES_WSDL_LOCATION;
    private final static WebServiceException SCHENKERX0020NORWAYX0020WEBSERVICES_EXCEPTION;
    private final static QName SCHENKERX0020NORWAYX0020WEBSERVICES_QNAME = new QName("LinjegodsWebServices", "Schenker_x0020_Norway_x0020_Webservices");

    static {
        SCHENKERX0020NORWAYX0020WEBSERVICES_WSDL_LOCATION = linjegodswebservices.SchenkerX0020NorwayX0020Webservices.class.getClassLoader().getResource("META-INF/wsdl/17578_Norway_PublicMethodes.wsdl");
        WebServiceException e = null;
        if (SCHENKERX0020NORWAYX0020WEBSERVICES_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/17578_Norway_PublicMethodes.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        SCHENKERX0020NORWAYX0020WEBSERVICES_EXCEPTION = e;
    }

    public SchenkerX0020NorwayX0020Webservices() {
        super(__getWsdlLocation(), SCHENKERX0020NORWAYX0020WEBSERVICES_QNAME);
    }

    public SchenkerX0020NorwayX0020Webservices(WebServiceFeature... features) {
        super(__getWsdlLocation(), SCHENKERX0020NORWAYX0020WEBSERVICES_QNAME, features);
    }

    public SchenkerX0020NorwayX0020Webservices(URL wsdlLocation) {
        super(wsdlLocation, SCHENKERX0020NORWAYX0020WEBSERVICES_QNAME);
    }

    public SchenkerX0020NorwayX0020Webservices(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SCHENKERX0020NORWAYX0020WEBSERVICES_QNAME, features);
    }

    public SchenkerX0020NorwayX0020Webservices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SchenkerX0020NorwayX0020Webservices(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SchenkerX0020NorwayX0020WebservicesSoap
     */
    @WebEndpoint(name = "Schenker_x0020_Norway_x0020_WebservicesSoap")
    public SchenkerX0020NorwayX0020WebservicesSoap getSchenkerX0020NorwayX0020WebservicesSoap() {
        return super.getPort(new QName("LinjegodsWebServices", "Schenker_x0020_Norway_x0020_WebservicesSoap"), SchenkerX0020NorwayX0020WebservicesSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SchenkerX0020NorwayX0020WebservicesSoap
     */
    @WebEndpoint(name = "Schenker_x0020_Norway_x0020_WebservicesSoap")
    public SchenkerX0020NorwayX0020WebservicesSoap getSchenkerX0020NorwayX0020WebservicesSoap(WebServiceFeature... features) {
        return super.getPort(new QName("LinjegodsWebServices", "Schenker_x0020_Norway_x0020_WebservicesSoap"), SchenkerX0020NorwayX0020WebservicesSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SCHENKERX0020NORWAYX0020WEBSERVICES_EXCEPTION!= null) {
            throw SCHENKERX0020NORWAYX0020WEBSERVICES_EXCEPTION;
        }
        return SCHENKERX0020NORWAYX0020WEBSERVICES_WSDL_LOCATION;
    }

}
