
package com.feedoo.database;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * \u8fd9\u4e2awebservice\u662f\u4e00\u4e2a\u5728\u7ebf\u77ed\u4fe1\u670d\u52a1\u7aef
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "NoteWebService", targetNamespace = "http://www.feedoo.com/database/", wsdlLocation = "META-INF/wsdl/NoteWebService.wsdl")
public class NoteWebService
    extends Service
{

    private final static URL NOTEWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException NOTEWEBSERVICE_EXCEPTION;
    private final static QName NOTEWEBSERVICE_QNAME = new QName("http://www.feedoo.com/database/", "NoteWebService");

    static {
        NOTEWEBSERVICE_WSDL_LOCATION = com.feedoo.database.NoteWebService.class.getClassLoader().getResource("META-INF/wsdl/NoteWebService.wsdl");
        WebServiceException e = null;
        if (NOTEWEBSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/NoteWebService.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        NOTEWEBSERVICE_EXCEPTION = e;
    }

    public NoteWebService() {
        super(__getWsdlLocation(), NOTEWEBSERVICE_QNAME);
    }

    public NoteWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), NOTEWEBSERVICE_QNAME, features);
    }

    public NoteWebService(URL wsdlLocation) {
        super(wsdlLocation, NOTEWEBSERVICE_QNAME);
    }

    public NoteWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NOTEWEBSERVICE_QNAME, features);
    }

    public NoteWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NoteWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns NoteWebServiceSoap
     */
    @WebEndpoint(name = "NoteWebServiceSoap")
    public NoteWebServiceSoap getNoteWebServiceSoap() {
        return super.getPort(new QName("http://www.feedoo.com/database/", "NoteWebServiceSoap"), NoteWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NoteWebServiceSoap
     */
    @WebEndpoint(name = "NoteWebServiceSoap")
    public NoteWebServiceSoap getNoteWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.feedoo.com/database/", "NoteWebServiceSoap"), NoteWebServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (NOTEWEBSERVICE_EXCEPTION!= null) {
            throw NOTEWEBSERVICE_EXCEPTION;
        }
        return NOTEWEBSERVICE_WSDL_LOCATION;
    }

}
