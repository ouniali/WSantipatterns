
package net.cangooroo.services.ws_2013;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import clientcredential.ws_2013.ClientCredential;
import hotel.ws_2013.Criteria;
import hotel.ws_2013.HotelBookingRequest;
import hotel.ws_2013.HotelBookingRoomResult;
import hotel.ws_2013.RequestCancellationPolicies;
import hotel.ws_2013.ResponseCancellationPolicy;
import hotel.ws_2013.ResultManipulation;
import hotel.ws_2013.SearchFilter;
import hotel.ws_2013.SearchResult;
import hotel.ws_2013.cangooroo.HotelResultWithAmenities;
import hotel.ws_2013.cangooroo.SearchFilterInformationResponse;
import ws_2013.cangooroo.BookingDetail;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Hotel_aSoap", targetNamespace = "http://ws_2013.services.cangooroo.net/")
@XmlSeeAlso({
    amendablepolicy.ws_2013.ObjectFactory.class,
    clientcredential.ws_2013.ObjectFactory.class,
    common.ws_2013.ObjectFactory.class,
    hotel.v2.webservice.cangooroo.ObjectFactory.class,
    hotel.ws_2013.ObjectFactory.class,
    hotel.ws_2013.cangooroo.ObjectFactory.class,
    insurance.ws_2013.ObjectFactory.class,
    insurance.ws_2013.cangooroo.ObjectFactory.class,
    net.cangooroo.services.ws_2013.ObjectFactory.class,
    rentacar.ws_2013.ObjectFactory.class,
    tour.ws_2013.ObjectFactory.class,
    trainpass.ws_2013.ObjectFactory.class,
    trainticket.ws_2013.ObjectFactory.class,
    transfer.ws_2013.ObjectFactory.class,
    travelpackage.ws_2013.ObjectFactory.class,
    ws_2013.ObjectFactory.class,
    ws_2013.cangooroo.ObjectFactory.class
})
public interface HotelASoap {


    /**
     * Use this method to get hotels avaiability and prices.
     * 
     * @param credential
     * @param criteria
     * @return
     *     returns hotel.ws_2013.SearchResult
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/searchAvailability")
    @WebResult(name = "searchAvailabilityResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "searchAvailability", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.SearchAvailability")
    @ResponseWrapper(localName = "searchAvailabilityResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.SearchAvailabilityResponse")
    public SearchResult searchAvailability(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "criteria", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        Criteria criteria);

    /**
     * Use this method to init an async Hotel search. Use the getSessionResult to get the result.
     * 
     * @param credential
     * @param criteria
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/initAsyncSearchAvailability")
    @WebResult(name = "initAsyncSearchAvailabilityResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "initAsyncSearchAvailability", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.InitAsyncSearchAvailability")
    @ResponseWrapper(localName = "initAsyncSearchAvailabilityResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.InitAsyncSearchAvailabilityResponse")
    public String initAsyncSearchAvailability(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "criteria", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        Criteria criteria);

    /**
     * Use this method to get filter option for a valid token. This is usefull if you are using the webservice pagination. 
     * 
     * @param credential
     * @param token
     * @return
     *     returns hotel.ws_2013.cangooroo.SearchFilterInformationResponse
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/getFilterInformation")
    @WebResult(name = "getFilterInformationResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "getFilterInformation", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetFilterInformation")
    @ResponseWrapper(localName = "getFilterInformationResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetFilterInformationResponse")
    public SearchFilterInformationResponse getFilterInformation(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "token", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        String token);

    /**
     * Use this method to filter a previous hotel result for a valid token.
     * 
     * @param resultPagination
     * @param credential
     * @param resultManipulation
     * @param token
     * @return
     *     returns hotel.ws_2013.SearchResult
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/getSessionResult")
    @WebResult(name = "getSessionResultResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "getSessionResult", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetSessionResult")
    @ResponseWrapper(localName = "getSessionResultResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetSessionResultResponse")
    public SearchResult getSessionResult(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "resultPagination", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        SearchFilter resultPagination,
        @WebParam(name = "resultManipulation", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ResultManipulation resultManipulation,
        @WebParam(name = "token", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        String token);

    /**
     * This method must be used for getting room's cancelation policies.
     * 
     * @param requestCancellationPolicies
     * @param credential
     * @return
     *     returns hotel.ws_2013.ResponseCancellationPolicy
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/getCancellationPolicies")
    @WebResult(name = "getCancellationPoliciesResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "getCancellationPolicies", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetCancellationPolicies")
    @ResponseWrapper(localName = "getCancellationPoliciesResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetCancellationPoliciesResponse")
    public ResponseCancellationPolicy getCancellationPolicies(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "requestCancellationPolicies", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        RequestCancellationPolicies requestCancellationPolicies);

    /**
     * Use this method to book a hotel.
     * 
     * @param credential
     * @param hotelBooking
     * @return
     *     returns ws_2013.cangooroo.BookingDetail
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/doBooking")
    @WebResult(name = "doBookingResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "doBooking", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.DoBooking")
    @ResponseWrapper(localName = "doBookingResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.DoBookingResponse")
    public BookingDetail doBooking(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "hotelBooking", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        HotelBookingRequest hotelBooking);

    /**
     * Use this method to cancel a hotel reservation.
     * 
     * @param credential
     * @param serviceID
     * @return
     *     returns hotel.ws_2013.HotelBookingRoomResult
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/cancelBooking")
    @WebResult(name = "cancelBookingResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "cancelBooking", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.CancelBooking")
    @ResponseWrapper(localName = "cancelBookingResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.CancelBookingResponse")
    public HotelBookingRoomResult cancelBooking(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "serviceID", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        int serviceID);

    /**
     * Use this method to retrieve a hotel detail.
     * 
     * @param credential
     * @param hotelID
     * @param descriptionLangISO
     * @return
     *     returns net.cangooroo.services.ws_2013.ArrayOfHotelDetail
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/getHotelDetail")
    @WebResult(name = "getHotelDetailResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "getHotelDetail", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetHotelDetail")
    @ResponseWrapper(localName = "getHotelDetailResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetHotelDetailResponse")
    public ArrayOfHotelDetail getHotelDetail(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "hotelID", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ArrayOfInt hotelID,
        @WebParam(name = "descriptionLangISO", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        String descriptionLangISO);

    /**
     * Use this method to return the provider's list of amenities from a specific hotel.
     * 
     * @param credential
     * @param hotelId
     * @param roomId
     * @param token
     * @return
     *     returns hotel.ws_2013.cangooroo.HotelResultWithAmenities
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/getHotelDetailAndAmenities")
    @WebResult(name = "getHotelDetailAndAmenitiesResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "getHotelDetailAndAmenities", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetHotelDetailAndAmenities")
    @ResponseWrapper(localName = "getHotelDetailAndAmenitiesResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetHotelDetailAndAmenitiesResponse")
    public HotelResultWithAmenities getHotelDetailAndAmenities(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "hotelId", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        int hotelId,
        @WebParam(name = "roomId", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        String roomId,
        @WebParam(name = "token", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        String token);

    /**
     * Get a list of HotelId and lastModification date by city id.
     * 
     * @param credential
     * @param cityId
     * @return
     *     returns net.cangooroo.services.ws_2013.ArrayOfHotelListbyCity
     */
    @WebMethod(action = "http://ws_2013.services.cangooroo.net/getHotelListbyCity")
    @WebResult(name = "getHotelListbyCityResult", targetNamespace = "http://ws_2013.services.cangooroo.net/")
    @RequestWrapper(localName = "getHotelListbyCity", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetHotelListbyCity")
    @ResponseWrapper(localName = "getHotelListbyCityResponse", targetNamespace = "http://ws_2013.services.cangooroo.net/", className = "net.cangooroo.services.ws_2013.GetHotelListbyCityResponse")
    public ArrayOfHotelListbyCity getHotelListbyCity(
        @WebParam(name = "credential", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        ClientCredential credential,
        @WebParam(name = "cityId", targetNamespace = "http://ws_2013.services.cangooroo.net/")
        int cityId);

}
