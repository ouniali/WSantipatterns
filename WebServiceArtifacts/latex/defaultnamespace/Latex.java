
package defaultnamespace;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "latex", targetNamespace = "http://DefaultNamespace")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Latex {


    /**
     * 
     * @param ochem
     * @param utf8
     * @param embeddedData
     * @param source
     * @param dpi
     * @param device
     * @param deviceInfo
     * @return
     *     returns defaultnamespace.SOAPlatexResult
     */
    @WebMethod
    @WebResult(name = "out", targetNamespace = "http://DefaultNamespace")
    @RequestWrapper(localName = "compile", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.Compile")
    @ResponseWrapper(localName = "compileResponse", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.CompileResponse")
    public SOAPlatexResult compile(
        @WebParam(name = "source", targetNamespace = "http://DefaultNamespace")
        String source,
        @WebParam(name = "device", targetNamespace = "http://DefaultNamespace")
        String device,
        @WebParam(name = "deviceInfo", targetNamespace = "http://DefaultNamespace")
        String deviceInfo,
        @WebParam(name = "dpi", targetNamespace = "http://DefaultNamespace")
        int dpi,
        @WebParam(name = "utf8", targetNamespace = "http://DefaultNamespace")
        boolean utf8,
        @WebParam(name = "ochem", targetNamespace = "http://DefaultNamespace")
        boolean ochem,
        @WebParam(name = "embeddedData", targetNamespace = "http://DefaultNamespace")
        boolean embeddedData);

}
