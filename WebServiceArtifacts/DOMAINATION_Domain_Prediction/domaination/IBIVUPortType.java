
package domaination;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IBIVU_PortType", targetNamespace = "Domaination")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IBIVUPortType {


    /**
     * 
     * @param uniProtRefSeqID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "Domaination#getTicketById")
    @WebResult(name = "ticket", targetNamespace = "")
    @RequestWrapper(localName = "getTicketById", targetNamespace = "Domaination", className = "domaination.ProtIdType")
    @ResponseWrapper(localName = "getTicketByIdResponse", targetNamespace = "Domaination", className = "domaination.TicketType")
    public String getTicketById(
        @WebParam(name = "UniProt_RefSeq_ID", targetNamespace = "")
        String uniProtRefSeqID);

    /**
     * 
     * @param fasta
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "Domaination#getTicketBySeq")
    @WebResult(name = "ticket", targetNamespace = "")
    @RequestWrapper(localName = "getTicketBySeq", targetNamespace = "Domaination", className = "domaination.FastaType")
    @ResponseWrapper(localName = "getTicketBySeqResponse", targetNamespace = "Domaination", className = "domaination.TicketType")
    public String getTicketBySeq(
        @WebParam(name = "FASTA", targetNamespace = "")
        String fasta);

    /**
     * 
     * @param ticket
     * @return
     *     returns domaination.ResultsResponseType
     */
    @WebMethod(action = "Domaination#getResults")
    @WebResult(name = "resultsResponse", targetNamespace = "")
    @RequestWrapper(localName = "getResults", targetNamespace = "Domaination", className = "domaination.TicketType")
    @ResponseWrapper(localName = "getResultsResponse", targetNamespace = "Domaination", className = "domaination.ResultsResponseTypeWrapper")
    public ResultsResponseType getResults(
        @WebParam(name = "ticket", targetNamespace = "")
        String ticket);

    /**
     * 
     * @param ticket
     * @return
     *     returns domaination.StatusType
     */
    @WebMethod(action = "Domaination#getStatus")
    @WebResult(name = "status", targetNamespace = "")
    @RequestWrapper(localName = "getStatus", targetNamespace = "Domaination", className = "domaination.TicketType")
    @ResponseWrapper(localName = "getStatusResponse", targetNamespace = "Domaination", className = "domaination.StatusResponseType")
    public StatusType getStatus(
        @WebParam(name = "ticket", targetNamespace = "")
        String ticket);

}
