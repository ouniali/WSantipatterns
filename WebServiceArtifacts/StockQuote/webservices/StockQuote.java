
package webservices;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * 
 * Description: This component returns delayed quote data for a stock symbol.  Stock data is downloaded from Yahoo's Website when requested for a symbol.
 * 
 * The following data is returned for a given stock symbol: Last Trade Price, Last Trade Time, Prev Close, Open, Day Low, Day High, Volume
 * 
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "StockQuote", targetNamespace = "http://webservices", wsdlLocation = "META-INF/wsdl/10302_United_States_StockQuote.wsdl")
public class StockQuote
    extends Service
{

    private final static URL STOCKQUOTE_WSDL_LOCATION;
    private final static WebServiceException STOCKQUOTE_EXCEPTION;
    private final static QName STOCKQUOTE_QNAME = new QName("http://webservices", "StockQuote");

    static {
        STOCKQUOTE_WSDL_LOCATION = webservices.StockQuote.class.getClassLoader().getResource("META-INF/wsdl/10302_United_States_StockQuote.wsdl");
        WebServiceException e = null;
        if (STOCKQUOTE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/10302_United_States_StockQuote.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        STOCKQUOTE_EXCEPTION = e;
    }

    public StockQuote() {
        super(__getWsdlLocation(), STOCKQUOTE_QNAME);
    }

    public StockQuote(WebServiceFeature... features) {
        super(__getWsdlLocation(), STOCKQUOTE_QNAME, features);
    }

    public StockQuote(URL wsdlLocation) {
        super(wsdlLocation, STOCKQUOTE_QNAME);
    }

    public StockQuote(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, STOCKQUOTE_QNAME, features);
    }

    public StockQuote(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StockQuote(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "ServicePort")
    public ServicePortType getServicePort() {
        return super.getPort(new QName("http://webservices", "ServicePort"), ServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "ServicePort")
    public ServicePortType getServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservices", "ServicePort"), ServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (STOCKQUOTE_EXCEPTION!= null) {
            throw STOCKQUOTE_EXCEPTION;
        }
        return STOCKQUOTE_WSDL_LOCATION;
    }

}
