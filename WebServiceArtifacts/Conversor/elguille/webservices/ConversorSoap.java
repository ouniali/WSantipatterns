
package elguille.webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ConversorSoap", targetNamespace = "http://elGuille/WebServices")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ConversorSoap {


    /**
     * Convierte de Fahrenheit a Celsius, devuelve un valor Double
     * 
     * @param valor
     * @return
     *     returns double
     */
    @WebMethod(operationName = "FaC", action = "http://elGuille/WebServices/FaC")
    @WebResult(name = "FaCResult", targetNamespace = "http://elGuille/WebServices")
    @RequestWrapper(localName = "FaC", targetNamespace = "http://elGuille/WebServices", className = "elguille.webservices.FaC")
    @ResponseWrapper(localName = "FaCResponse", targetNamespace = "http://elGuille/WebServices", className = "elguille.webservices.FaCResponse")
    public double faC(
        @WebParam(name = "valor", targetNamespace = "http://elGuille/WebServices")
        double valor);

    /**
     * Convierte de Celsius a Fahrenheit, devuelve un valor Double
     * 
     * @param valor
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CaF", action = "http://elGuille/WebServices/CaF")
    @WebResult(name = "CaFResult", targetNamespace = "http://elGuille/WebServices")
    @RequestWrapper(localName = "CaF", targetNamespace = "http://elGuille/WebServices", className = "elguille.webservices.CaF")
    @ResponseWrapper(localName = "CaFResponse", targetNamespace = "http://elGuille/WebServices", className = "elguille.webservices.CaFResponse")
    public double caF(
        @WebParam(name = "valor", targetNamespace = "http://elGuille/WebServices")
        double valor);

}
